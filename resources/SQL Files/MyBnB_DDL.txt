DROP TABLE IF EXISTS Users, Listings, Bookings, Reviews, Amenities;

CREATE TABLE Users(
    username varchar(16) PRIMARY KEY NOT NULL,
    password varchar(16) NOT NULL,
    firstName varchar(15) NOT NULL,
    lastName varchar(15) NOT NULL,
    address varchar(25) NOT NULL,
    occupation varchar(20) NOT NULL,
    ssn varchar(9) NOT NULL,
    creditCard varchar(16),
    birthDate date NOT NULL
);

CREATE TABLE Listings(
    listingID int NOT NULL AUTO_INCREMENT,
    hostID varchar(16) NOT NULL,
    listingType varchar(20) NOT NULL,
    address varchar(25) NOT NULL,
    country varchar(16) NOT NULL,
    city varchar(24) NOT NULL,
    postalCode varchar(10) NOT NULL,
    price decimal(6, 2) NOT NULL,
    longitude decimal(9, 6) NOT NULL,
    latitude decimal(8, 6) NOT NULL,
    amenities varchar(300),
    PRIMARY KEY (listingID),
    FOREIGN KEY (hostID) REFERENCES Users(username) ON DELETE CASCADE,
    CHECK (listingType IN ('House', 'Apartment', 'Guesthouse', 'Hotel')),
    CHECK (price >= 0)
);

CREATE TABLE Bookings(
    bookingID int NOT NULL AUTO_INCREMENT,
    listingID int NOT NULL,
    userID varchar(16) NOT NULL,
    status varchar(16) NOT NULL,
    statusReason varchar(10),
    price float,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    PRIMARY KEY (bookingID),
    FOREIGN KEY (listingID) REFERENCES Listings(listingID) ON DELETE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users(username) ON DELETE CASCADE,
    CHECK (status IN ('completed', 'cancelled', 'unavailable', 'booked')),
    CHECK (statusReason IN ('host', 'renter')),
    CHECK (price >= 0)
);

CREATE TABLE Reviews(
    reviewID int NOT NULL AUTO_INCREMENT,
    reviewerID varchar(16) NOT NULL,
    revieweeID varchar(16) NOT NULL,
    listingID int,
    comment varchar(400),
    hostRating int,
    listingRating int,
    renterRating int,
    PRIMARY KEY (reviewID),
    FOREIGN KEY (reviewerID) REFERENCES Users(username) ON DELETE CASCADE,
    FOREIGN KEY (revieweeID) REFERENCES Users(username) ON DELETE CASCADE,
    FOREIGN KEY (listingID) REFERENCES Listings(listingID) ON DELETE CASCADE,
    CHECK (hostRating >= 1 AND hostRating <= 5),
    CHECK (listingRating >= 1 AND listingRating <= 5),
    CHECK (renterRating >= 1 AND renterRating <= 5)
);

CREATE TABLE Amenities(
    amenityID int PRIMARY KEY NOT NULL,
    amenityName varchar(26) NOT NULL
);